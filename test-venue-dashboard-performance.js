const https = require('https');
const http = require('http');

// –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
process.env["NODE_TLS_REJECT_UNAUTHORIZED"] = 0;

const baseUrl = 'http://localhost:3000';
const venueId = 3;

// –í–∫–ª–∞–¥–∫–∏ –∏–∑ –ª–µ–≤–æ–≥–æ –º–µ–Ω—é –¥–∞—à–±–æ—Ä–¥–∞
const tabs = [
  { id: 'overview', name: '–û–±–∑–æ—Ä' },
  { id: 'edit', name: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { id: 'analytics', name: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞' },
  { id: 'reviews', name: '–û—Ç–∑—ã–≤—ã' },
  { id: 'qa', name: '–í–æ–ø—Ä–æ—Å—ã/–û—Ç–≤–µ—Ç—ã' },
  { id: 'chat', name: '–ß–∞—Ç —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏' },
  { id: 'news', name: '–ù–æ–≤–æ—Å—Ç–∏' },
  { id: 'products', name: '–¢–æ–≤–∞—Ä—ã/–£—Å–ª—É–≥–∏' }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏
function measureLoadTime(url) {
  return new Promise((resolve) => {
    const startTime = Date.now();
    
    const request = http.get(url, (response) => {
      let data = '';
      
      response.on('data', (chunk) => {
        data += chunk;
      });
      
      response.on('end', () => {
        const endTime = Date.now();
        const loadTime = endTime - startTime;
        
        resolve({
          status: response.statusCode,
          time: loadTime,
          size: data.length,
          headers: response.headers
        });
      });
    });
    
    request.on('error', (error) => {
      const endTime = Date.now();
      const loadTime = endTime - startTime;
      
      resolve({
        status: 'ERROR',
        time: loadTime,
        error: error.message
      });
    });
    
    request.setTimeout(30000, () => {
      request.destroy();
      resolve({
        status: 'TIMEOUT',
        time: 30000,
        error: 'Request timeout'
      });
    });
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testVenueDashboardPerformance() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–∞—à–±–æ—Ä–¥–∞ –º–µ—Å—Ç–∞\n');
  console.log('=' * 60);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–∞—à–±–æ—Ä–¥–∞
  console.log('\nüìä –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–∞—à–±–æ—Ä–¥–∞:');
  const mainPageResult = await measureLoadTime(`${baseUrl}/vendor/venues/${venueId}`);
  console.log(`   URL: ${baseUrl}/vendor/venues/${venueId}`);
  console.log(`   –°—Ç–∞—Ç—É—Å: ${mainPageResult.status}`);
  console.log(`   –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${mainPageResult.time}ms`);
  if (mainPageResult.error) {
    console.log(`   –û—à–∏–±–∫–∞: ${mainPageResult.error}`);
  }
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏
  console.log('\nüìä API endpoints –¥–ª—è –≤–∫–ª–∞–¥–æ–∫:');
  
  const apiEndpoints = [
    { name: '–û—Ç–∑—ã–≤—ã', url: `${baseUrl}/api/vendor/venues/${venueId}/reviews` },
    { name: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', url: `${baseUrl}/api/vendor/venues/${venueId}/analytics` },
    { name: '–í–æ–ø—Ä–æ—Å—ã/–û—Ç–≤–µ—Ç—ã', url: `${baseUrl}/api/vendor/venues/${venueId}/qa` },
    { name: '–ù–æ–≤–æ—Å—Ç–∏', url: `${baseUrl}/api/vendor/venues/${venueId}/news` },
    { name: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–∞', url: `${baseUrl}/api/vendor/venues/${venueId}/update` }
  ];
  
  for (const endpoint of apiEndpoints) {
    console.log(`\n   üîç ${endpoint.name}:`);
    const result = await measureLoadTime(endpoint.url);
    console.log(`      URL: ${endpoint.url}`);
    console.log(`      –°—Ç–∞—Ç—É—Å: ${result.status}`);
    console.log(`      –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${result.time}ms`);
    if (result.error) {
      console.log(`      –û—à–∏–±–∫–∞: ${result.error}`);
    }
  }
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  console.log('\nüìä –°–≤—è–∑–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:');
  
  const relatedPages = [
    { name: '–°–ø–∏—Å–æ–∫ –º–µ—Å—Ç –≤–µ–Ω–¥–æ—Ä–∞', url: `${baseUrl}/vendor/venues` },
    { name: '–°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Å—Ç–∞', url: `${baseUrl}/vendor/venues/create` },
    { name: '–î–∞—à–±–æ—Ä–¥ –≤–µ–Ω–¥–æ—Ä–∞', url: `${baseUrl}/vendor/dashboard` }
  ];
  
  for (const page of relatedPages) {
    console.log(`\n   üîç ${page.name}:`);
    const result = await measureLoadTime(page.url);
    console.log(`      URL: ${page.url}`);
    console.log(`      –°—Ç–∞—Ç—É—Å: ${result.status}`);
    console.log(`      –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${result.time}ms`);
    if (result.error) {
      console.log(`      –û—à–∏–±–∫–∞: ${result.error}`);
    }
  }
  
  console.log('\n' + '=' * 60);
  console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testVenueDashboardPerformance().catch(console.error);
