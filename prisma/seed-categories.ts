import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Seeding categories and subcategories...')

  // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = [
    {
      name: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
      slug: 'entertainment',
      icon: 'üé™',
      color: '#FF6B6B',
      isActive: true
    },
    {
      name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      slug: 'education',
      icon: 'üìö',
      color: '#4ECDC4',
      isActive: true
    },
    {
      name: '–°–ø–æ—Ä—Ç',
      slug: 'sports',
      icon: '‚öΩ',
      color: '#45B7D1',
      isActive: true
    },
    {
      name: '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
      slug: 'creativity',
      icon: 'üé®',
      color: '#96CEB4',
      isActive: true
    },
    {
      name: '–ú–µ–¥–∏—Ü–∏–Ω–∞',
      slug: 'medicine',
      icon: 'üè•',
      color: '#FFEAA7',
      isActive: true
    }
  ]

  for (const categoryData of categories) {
    const category = await prisma.venueCategory.upsert({
      where: { slug: categoryData.slug },
      update: categoryData,
      create: categoryData
    })

    console.log(`‚úÖ Created category: ${category.name}`)

    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const subcategories = getSubcategoriesForCategory(categoryData.slug)
    
    for (const subcategoryData of subcategories) {
      const subcategory = await prisma.venueSubcategory.upsert({
        where: { 
          slug: subcategoryData.slug
        },
        update: {
          ...subcategoryData,
          categoryId: category.id
        },
        create: {
          ...subcategoryData,
          categoryId: category.id
        }
      })

      console.log(`  ‚úÖ Created subcategory: ${subcategory.name}`)
    }
  }

  console.log('üéâ Categories and subcategories seeded successfully!')
}

function getSubcategoriesForCategory(categorySlug: string) {
  const subcategoriesMap: Record<string, any[]> = {
    entertainment: [
      { name: '–ê—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã', slug: 'attractions', backgroundImage: '/images/attractions.jpg', isActive: true },
      { name: '–ò–≥—Ä–æ–≤—ã–µ –∫–æ–º–Ω–∞—Ç—ã', slug: 'playrooms', backgroundImage: '/images/playrooms.jpg', isActive: true },
      { name: '–ö–≤–µ—Å—Ç—ã', slug: 'quests', backgroundImage: '/images/quests.jpg', isActive: true },
      { name: '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã', slug: 'cinemas', backgroundImage: '/images/cinemas.jpg', isActive: true },
      { name: '–ü–∞—Ä–∫–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π', slug: 'amusement-parks', backgroundImage: '/images/amusement-parks.jpg', isActive: true }
    ],
    education: [
      { name: '–Ø–∑—ã–∫–æ–≤—ã–µ –∫—É—Ä—Å—ã', slug: 'language-courses', backgroundImage: '/images/language-courses.jpg', isActive: true },
      { name: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ', slug: 'school-prep', backgroundImage: '/images/school-prep.jpg', isActive: true },
      { name: '–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞', slug: 'robotics', backgroundImage: '/images/robotics.jpg', isActive: true },
      { name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', slug: 'programming', backgroundImage: '/images/programming.jpg', isActive: true },
      { name: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', slug: 'mathematics', backgroundImage: '/images/mathematics.jpg', isActive: true }
    ],
    sports: [
      { name: '–§—É—Ç–±–æ–ª', slug: 'football', backgroundImage: '/images/football.jpg', isActive: true },
      { name: '–ü–ª–∞–≤–∞–Ω–∏–µ', slug: 'swimming', backgroundImage: '/images/swimming.jpg', isActive: true },
      { name: '–¢–∞–Ω—Ü—ã', slug: 'dancing', backgroundImage: '/images/dancing.jpg', isActive: true },
      { name: '–ì–∏–º–Ω–∞—Å—Ç–∏–∫–∞', slug: 'gymnastics', backgroundImage: '/images/gymnastics.jpg', isActive: true },
      { name: '–ë–æ–µ–≤—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞', slug: 'martial-arts', backgroundImage: '/images/martial-arts.jpg', isActive: true }
    ],
    creativity: [
      { name: '–†–∏—Å–æ–≤–∞–Ω–∏–µ', slug: 'drawing', backgroundImage: '/images/drawing.jpg', isActive: true },
      { name: '–õ–µ–ø–∫–∞', slug: 'sculpting', backgroundImage: '/images/sculpting.jpg', isActive: true },
      { name: '–ú—É–∑—ã–∫–∞', slug: 'music', backgroundImage: '/images/music.jpg', isActive: true },
      { name: '–¢–µ–∞—Ç—Ä', slug: 'theater', backgroundImage: '/images/theater.jpg', isActive: true },
      { name: '–†—É–∫–æ–¥–µ–ª–∏–µ', slug: 'handicrafts', backgroundImage: '/images/handicrafts.jpg', isActive: true }
    ],
    medicine: [
      { name: '–ü–µ–¥–∏–∞—Ç—Ä–∏—è', slug: 'pediatrics', backgroundImage: '/images/pediatrics.jpg', isActive: true },
      { name: '–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è', slug: 'dentistry', backgroundImage: '/images/dentistry.jpg', isActive: true },
      { name: '–û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—è', slug: 'ophthalmology', backgroundImage: '/images/ophthalmology.jpg', isActive: true },
      { name: '–õ–æ–≥–æ–ø–µ–¥–∏—è', slug: 'speech-therapy', backgroundImage: '/images/speech-therapy.jpg', isActive: true },
      { name: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', slug: 'psychology', backgroundImage: '/images/psychology.jpg', isActive: true }
    ]
  }

  return subcategoriesMap[categorySlug] || []
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding categories:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
