'use client'

import { useEffect, useRef, useState } from 'react'
import { loadYandexMaps, isYandexMapsReady, resetYandexMaps } from '@/lib/yandex-maps'

interface SimpleYandexMapProps {
  events: unknown[]
  cityCenter: { lat: number; lng: number }
  cityName: string
}

export default function SimpleYandexMap({ events, cityCenter, cityName }: SimpleYandexMapProps) {
  const mapRef = useRef<HTMLDivElement>(null)
  const [map, setMap] = useState<any>(null)
  const [isMapLoaded, setIsMapLoaded] = useState(false)
  const [mapError, setMapError] = useState<string | null>(null)
  const [isLoading, setIsLoading] = useState(false)
  const [retryCount, setRetryCount] = useState(0)
  const [loadingStep, setLoadingStep] = useState('')
  const [forceError, setForceError] = useState(false)

  // –ü–∞—Ä—Å–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–æ–±—ã—Ç–∏–π
  const eventMarkers = events
    .filter(event => event.coordinates)
    .map(event => {
      try {
        const coords = event.coordinates.split(',').map(Number)
        if (coords.length === 2 && !isNaN(coords[0]) && !isNaN(coords[1])) {
          return {
            id: event.id,
            coordinates: [coords[0], coords[1]] as [number, number],
            event
          }
        }
      } catch (error) {
        console.warn('Invalid coordinates for event:', event.id, event.coordinates)
      }
      return null
    })
    .filter(Boolean)

  const loadMap = async () => {
    console.log('üîÑ loadMap called')
    console.log('üåê Window available:', typeof window !== 'undefined')
    console.log('üó∫Ô∏è Map ref available:', !!mapRef.current)
    console.log('üìç Map ref element:', mapRef.current)
    
    if (typeof window === 'undefined') {
      console.log('‚ùå Window not available, skipping map load')
      setMapError('–ë—Ä–∞—É–∑–µ—Ä–Ω–∞—è —Å—Ä–µ–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
      return
    }
    
    // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    if (!mapRef.current) {
      console.log('‚è≥ Map ref not ready, waiting for DOM...')
      setLoadingStep('–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM...')
      setIsLoading(true)
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
      let attempts = 0
      const checkDOM = () => {
        attempts++
        console.log(`üîç DOM check attempt ${attempts}`)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ mapRef, –Ω–æ –∏ –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
        const mapElement = document.querySelector('[data-map-container]')
        console.log('üîç Map element in DOM:', mapElement)
        
        if (mapRef.current || mapElement) {
          console.log('‚úÖ DOM ready, proceeding with map load')
          if (mapElement && !mapRef.current) {
            // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ DOM, –Ω–æ ref –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
            console.log('‚ö†Ô∏è Map element found in DOM but ref not working, trying alternative approach')
            setLoadingStep('–ü–æ–ø—ã—Ç–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏...')
            
            // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç—É –Ω–∞–ø—Ä—è–º—É—é –≤ –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            setTimeout(() => {
              try {
                loadMapDirectly(mapElement)
              } catch (error) {
                console.error('‚ùå Alternative approach failed:', error)
                setMapError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º')
                setIsLoading(false)
              }
            }, 100)
            return
          }
          loadMap() // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤
          return
        }
        
        if (attempts < 20) { // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
          setTimeout(checkDOM, 100) // –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
        } else {
          console.log('‚ùå DOM not ready after 20 attempts')
          console.log('üîç Final DOM state check:')
          console.log('- mapRef.current:', mapRef.current)
          console.log('- document.querySelector result:', document.querySelector('[data-map-container]'))
          console.log('- document.body contains map container:', document.body.innerHTML.includes('data-map-container'))
          
          // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç
          const allDivs = document.querySelectorAll('div')
          console.log('üîç All divs count:', allDivs.length)
          
          // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
          console.log('üîÑ Trying to create new map container...')
          const newMapContainer = document.createElement('div')
          newMapContainer.setAttribute('data-map-container', 'true')
          newMapContainer.className = 'w-full h-full'
          newMapContainer.style.minHeight = '600px'
          
          // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          const parentContainer = document.querySelector('.w-full.h-\\[600px\\].rounded-lg.overflow-hidden')
          if (parentContainer) {
            console.log('‚úÖ Found parent container, appending new map container')
            parentContainer.appendChild(newMapContainer)
            loadMapDirectly(newMapContainer)
            return
          }
          
          setMapError('DOM —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç—ã –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ 20 –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É.')
          setIsLoading(false)
        }
      }
      
      checkDOM()
      return
    }

    console.log('üîÑ Starting map loading...')
    setIsLoading(true)
    setMapError(null)
    setLoadingStep('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...')
    setForceError(false)

    const initMap = () => {
      console.log('üó∫Ô∏è Initializing map...')
      setLoadingStep('–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API...')
      
      if (!isYandexMapsReady() || !mapRef.current || map) {
        console.log('‚ùå Map not ready or already exists')
        setLoadingStep('API –Ω–µ –≥–æ—Ç–æ–≤ –∏–ª–∏ –∫–∞—Ä—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        return
      }

      setLoadingStep('–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–∞—Ä—Ç—ã...')
      window.ymaps.ready(() => {
        console.log('‚úÖ Yandex Maps ready, creating map instance...')
        if (!mapRef.current || map) return

        setLoadingStep('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç—ã...')
        const mapInstance = new window.ymaps.Map(mapRef.current, {
          center: [cityCenter.lat, cityCenter.lng],
          zoom: 12,
          controls: ['zoomControl', 'fullscreenControl', 'typeSelector']
        })

        console.log('‚úÖ Map instance created successfully')
        setLoadingStep('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤...')
        
        setMap(mapInstance)
        setIsMapLoaded(true)
        setMapError(null)
        setIsLoading(false)
        setLoadingStep('')

        // –ü–æ–¥–≥–æ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –ø–æ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        try { mapInstance.container.fitToViewport() } catch {}

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        const handleResize = () => {
          try { mapInstance.container.fitToViewport() } catch {}
        }
        window.addEventListener('resize', handleResize)

        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        mapInstance.events.add('destroy', () => {
          window.removeEventListener('resize', handleResize)
        })
      })
    }

    try {
      console.log('üîÑ Loading Yandex Maps API...')
      setLoadingStep('–ó–∞–≥—Ä—É–∑–∫–∞ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç...')
      await loadYandexMaps()
      console.log('‚úÖ Yandex Maps API loaded, initializing map...')
      setLoadingStep('API –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã...')
      initMap()
    } catch (error) {
      console.error('‚ùå Error loading Yandex Maps:', error)
      setMapError(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç')
      setIsLoading(false)
      setLoadingStep('')
    }
  }

  const handleRetry = () => {
    setRetryCount(prev => prev + 1)
    resetYandexMaps()
    setMap(null)
    setIsMapLoaded(false)
    setMapError(null)
    loadMap()
  }

  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã –Ω–∞–ø—Ä—è–º—É—é –≤ DOM —ç–ª–µ–º–µ–Ω—Ç
  const loadMapDirectly = async (mapElement: Element) => {
    console.log('üîÑ loadMapDirectly called with element:', mapElement)
    
    try {
      setLoadingStep('–ó–∞–≥—Ä—É–∑–∫–∞ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç...')
      await loadYandexMaps()
      
      setLoadingStep('–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã...')
      window.ymaps.ready(() => {
        console.log('‚úÖ Yandex Maps ready for direct load')
        
        const mapInstance = new window.ymaps.Map(mapElement, {
          center: [cityCenter.lat, cityCenter.lng],
          zoom: 12,
          controls: ['zoomControl', 'fullscreenControl', 'typeSelector']
        })

        console.log('‚úÖ Map instance created directly')
        setMap(mapInstance)
        setIsMapLoaded(true)
        setMapError(null)
        setIsLoading(false)
        setLoadingStep('')

        // –ü–æ–¥–≥–æ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –ø–æ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        try { mapInstance.container.fitToViewport() } catch {}

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        const handleResize = () => {
          try { mapInstance.container.fitToViewport() } catch {}
        }
        window.addEventListener('resize', handleResize)

        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        mapInstance.events.add('destroy', () => {
          window.removeEventListener('resize', handleResize)
        })
      })
    } catch (error) {
      console.error('‚ùå Error in loadMapDirectly:', error)
      setMapError(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã')
      setIsLoading(false)
    }
  }

  useEffect(() => {
    console.log('üîÑ SimpleYandexMap useEffect triggered')
    console.log('üìç City center:', cityCenter)
    console.log('üìä Events count:', events.length)
    console.log('üó∫Ô∏è Map ref:', mapRef.current)
    
    // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –∫–∞—Ä—Ç—ã
    const initTimer = setTimeout(() => {
      console.log('üîÑ DOM ready timer triggered')
      loadMap()
    }, 100) // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ DOM

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º loadMap
    const timer = setTimeout(() => {
      if (!isLoading && !isMapLoaded && !mapError) {
        console.log('‚ö†Ô∏è Map not loading, forcing loadMap call')
        loadMap()
      }
    }, 500) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const forceTimeout = setTimeout(() => {
      if (isLoading && !isMapLoaded && !mapError) {
        console.log('‚ö†Ô∏è Force timeout triggered - map taking too long')
        setForceError(true)
        setMapError('–ö–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å.')
        setIsLoading(false)
      }
    }, 30000) // 30 —Å–µ–∫—É–Ω–¥

    return () => {
      clearTimeout(initTimer)
      clearTimeout(timer)
      clearTimeout(forceTimeout)
      if (map && typeof map.destroy === 'function') {
        try { map.destroy() } catch {}
      }
    }
  }, [cityCenter.lat, cityCenter.lng])

  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –æ—Ç–ª–∞–¥–∫—É
  useEffect(() => {
    console.log('üìä State update:', {
      isLoading,
      isMapLoaded,
      mapError,
      loadingStep,
      retryCount,
      forceError
    })
  }, [isLoading, isMapLoaded, mapError, loadingStep, retryCount, forceError])

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    console.log('üöÄ Component mounted, checking if map should load...')
    console.log('üó∫Ô∏è Map ref on mount:', mapRef.current)
    
    // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
    const mountTimer = setTimeout(() => {
      console.log('üîÑ Mount timer triggered, checking DOM...')
      if (!isLoading && !isMapLoaded && !mapError) {
        console.log('‚ö†Ô∏è Map not loading on mount, forcing load...')
        loadMap()
      }
    }, 1000) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–≤–∏—Å—à–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
    const forceStopTimer = setTimeout(() => {
      if (isLoading && !isMapLoaded && !mapError) {
        console.log('‚ö†Ô∏è Force stopping stuck loading process')
        setIsLoading(false)
        setMapError('–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–∏—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É.')
        setLoadingStep('')
      }
    }, 10000) // 10 —Å–µ–∫—É–Ω–¥

    return () => {
      clearTimeout(mountTimer)
      clearTimeout(forceStopTimer)
    }
  }, []) // –¢–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã –Ω–∞ –∫–∞—Ä—Ç—É
  useEffect(() => {
    if (!map || !isMapLoaded || eventMarkers.length === 0) return

    // –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –º–∞—Ä–∫–µ—Ä–æ–≤
    const collection = new window.ymaps.GeoObjectCollection({}, {
      preset: 'islands#redIcon'
    })

    eventMarkers.forEach((marker) => {
      if (!marker) return

      const placemark = new window.ymaps.Placemark(
        marker.coordinates,
        {
          balloonContentHeader: marker.event.title,
          balloonContentBody: `
            <div style="padding: 10px;">
              <p><strong>${marker.event.title}</strong></p>
              <p>${marker.event.description || ''}</p>
              <p><strong>–ú–µ—Å—Ç–æ:</strong> ${marker.event.venue || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
              <p><strong>–î–∞—Ç–∞:</strong> ${(() => {
                try {
                  const date = new Date(marker.event.startDate)
                  if (Number.isNaN(date.getTime())) return '–î–∞—Ç–∞ —É—Ç–æ—á–Ω—è–µ—Ç—Å—è'
                  return date.toLocaleDateString('ru')
                } catch (error) {
                  return '–î–∞—Ç–∞ —É—Ç–æ—á–Ω—è–µ—Ç—Å—è'
                }
              })()}</p>
              <p><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${marker.event.afishaCategory?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
            </div>
          `,
          balloonContentFooter: `<a href="/moscow/event/${marker.event.slug}" target="_blank">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>`
        },
        {
          preset: 'islands#redIcon'
        }
      )

      collection.add(placemark)
    })

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç—É
    map.geoObjects.add(collection)

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (map && map.geoObjects) {
        map.geoObjects.removeAll()
      }
    }
  }, [map, isMapLoaded, eventMarkers])

  if (mapError) {
    return (
      <div className="w-full h-[600px] bg-gray-100 rounded-lg flex items-center justify-center">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 bg-red-500 rounded-full flex items-center justify-center">
            <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <h3 className="text-xl font-semibold text-gray-700 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã</h3>
          <p className="text-gray-500 mb-4">{mapError}</p>
          <button
            onClick={handleRetry}
            className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
          {retryCount > 0 && (
            <p className="text-sm text-gray-400 mt-2">–ü–æ–ø—ã—Ç–∫–∞ {retryCount + 1}</p>
          )}
        </div>
      </div>
    )
  }

  if (isLoading || !isMapLoaded) {
    return (
      <div className="w-full h-[600px] bg-gradient-to-br from-blue-50 to-indigo-100 rounded-lg flex items-center justify-center">
        <div className="text-center max-w-md mx-auto px-6">
          {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –∫–∞—Ä—Ç—ã */}
          <div className="relative mb-6">
            <div className="w-20 h-20 mx-auto bg-blue-600 rounded-full flex items-center justify-center animate-pulse shadow-lg">
              <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m0 0L9 7" />
              </svg>
            </div>
            {/* –í—Ä–∞—â–∞—é—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
            <div className="absolute -top-2 -right-2 w-6 h-6 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin"></div>
          </div>

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <h3 className="text-2xl font-bold text-gray-800 mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã</h3>
          
          {/* –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø */}
          {loadingStep && (
            <div className="mb-4">
              <p className="text-lg text-blue-600 font-medium">{loadingStep}</p>
              <div className="w-full bg-blue-200 rounded-full h-2 mt-2">
                <div className="bg-blue-600 h-2 rounded-full animate-pulse" style={{ width: '60%' }}></div>
              </div>
            </div>
          )}

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π */}
          <div className="bg-white rounded-lg p-4 mb-4 shadow-sm">
            <p className="text-gray-600 mb-2">–ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π</p>
            <p className="text-3xl font-bold text-blue-600">{events.length}</p>
          </div>

          {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ—á–∫–∏ */}
          <div className="flex items-center justify-center space-x-2">
            <div className="w-3 h-3 bg-blue-600 rounded-full animate-bounce"></div>
            <div className="w-3 h-3 bg-blue-600 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
            <div className="w-3 h-3 bg-blue-600 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="mt-4 text-sm text-gray-500">
            <p>–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∫–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</p>
            {retryCount > 0 && (
              <p className="text-orange-600">–ü–æ–ø—ã—Ç–∫–∞ {retryCount + 1}</p>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <div className="mt-4 space-x-2">
              <button
                onClick={handleRetry}
                className="bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 transition-colors text-sm"
              >
                –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
              </button>
              
              {!isLoading && !isMapLoaded && !mapError && (
                <button
                  onClick={() => {
                    console.log('üîÑ Manual load map button clicked')
                    loadMap()
                  }}
                  className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors text-sm"
                >
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç—É
                </button>
              )}
              
              {mapError && mapError.includes('DOM') && (
                <button
                  onClick={() => {
                    console.log('üîÑ Alternative load map button clicked')
                    const mapElement = document.querySelector('[data-map-container]')
                    if (mapElement) {
                      loadMapDirectly(mapElement)
                    } else {
                      setMapError('DOM —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏')
                    }
                  }}
                  className="bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600 transition-colors text-sm"
                >
                  –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
                </button>
              )}
              
              {mapError && (mapError.includes('DOM') || mapError.includes('–∑–∞–≤–∏—Å')) && (
                <button
                  onClick={() => {
                    console.log('üîÑ Force create map container button clicked')
                    const parentContainer = document.querySelector('.w-full.h-\\[600px\\].rounded-lg.overflow-hidden')
                    if (parentContainer) {
                      // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
                      parentContainer.innerHTML = ''
                      
                      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
                      const newMapContainer = document.createElement('div')
                      newMapContainer.setAttribute('data-map-container', 'true')
                      newMapContainer.className = 'w-full h-full'
                      newMapContainer.style.minHeight = '600px'
                      
                      parentContainer.appendChild(newMapContainer)
                      console.log('‚úÖ New map container created')
                      
                      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—É
                      loadMapDirectly(newMapContainer)
                    } else {
                      setMapError('–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')
                    }
                  }}
                  className="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors text-sm"
                >
                  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
                </button>
              )}
            </div>
            
            {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="mt-4 text-xs text-gray-400 bg-gray-100 p-2 rounded">
              <p>–û—Ç–ª–∞–¥–∫–∞:</p>
              <p>isLoading: {isLoading.toString()}</p>
              <p>isMapLoaded: {isMapLoaded.toString()}</p>
              <p>mapError: {mapError || 'null'}</p>
              <p>loadingStep: {loadingStep || 'null'}</p>
              <p>retryCount: {retryCount}</p>
              <p>forceError: {forceError.toString()}</p>
            </div>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="w-full h-[600px] rounded-lg overflow-hidden">
      <div 
        ref={mapRef} 
        data-map-container="true"
        className="w-full h-full"
        style={{ minHeight: '600px' }}
        onLoad={() => console.log('üó∫Ô∏è Map container loaded')}
      />
    </div>
  )
}
