#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –±–µ–∫–∞–ø–∞ —Å–∏—Å—Ç–µ–º—ã
 */

const fs = require('fs')
const path = require('path')
const { execSync } = require('child_process')

const BACKUP_DIR = '/Users/a.kenikh/Downloads/Kiddeo/Kiddeo33/backup_0410'
const PROJECT_DIR = '/Users/a.kenikh/Downloads/Kiddeo/Kiddeo33'

console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±–µ–∫–∞–ø–∞ —Å–∏—Å—Ç–µ–º—ã...')

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±–µ–∫–∞–ø–∞
if (!fs.existsSync(BACKUP_DIR)) {
  fs.mkdirSync(BACKUP_DIR, { recursive: true })
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±–µ–∫–∞–ø–∞')
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function copyDir(src, dest) {
  if (!fs.existsSync(src)) {
    console.log(`‚ö†Ô∏è –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${src}`)
    return
  }
  
  if (!fs.existsSync(dest)) {
    fs.mkdirSync(dest, { recursive: true })
  }
  
  const items = fs.readdirSync(src)
  
  for (const item of items) {
    const srcPath = path.join(src, item)
    const destPath = path.join(dest, item)
    
    const stat = fs.statSync(srcPath)
    
    if (stat.isDirectory()) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º node_modules –∏ –¥—Ä—É–≥–∏–µ –Ω–µ–Ω—É–∂–Ω—ã–µ –ø–∞–ø–∫–∏
      if (['node_modules', '.next', '.git', 'backup_0410', 'hydration-reports'].includes(item)) {
        console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ –ø–∞–ø–∫–∞: ${item}`)
        continue
      }
      copyDir(srcPath, destPath)
    } else {
      fs.copyFileSync(srcPath, destPath)
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞
function createArchive() {
  try {
    console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...')
    const archiveName = `kiddeo_backup_${new Date().toISOString().split('T')[0]}.tar.gz`
    const archivePath = path.join(BACKUP_DIR, archiveName)
    
    // –°–æ–∑–¥–∞–µ–º tar.gz –∞—Ä—Ö–∏–≤
    execSync(`cd "${PROJECT_DIR}" && tar -czf "${archivePath}" --exclude=node_modules --exclude=.next --exclude=.git --exclude=backup_0410 --exclude=hydration-reports .`, { stdio: 'inherit' })
    
    console.log(`‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${archiveName}`)
    return archivePath
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞:', error.message)
    return null
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ –±–µ–∫–∞–ø–µ
function createBackupReport() {
  const report = {
    timestamp: new Date().toISOString(),
    projectPath: PROJECT_DIR,
    backupPath: BACKUP_DIR,
    version: '1.0.0',
    description: '–ü–æ–ª–Ω—ã–π –±–µ–∫–∞–ø —Å–∏—Å—Ç–µ–º—ã Kiddeo',
    includes: [
      '–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ (src/)',
      '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã',
      '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (prisma/dev.db)',
      '–°—Ö–µ–º–∞ Prisma',
      '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
      '–°–∫—Ä–∏–ø—Ç—ã'
    ],
    excludes: [
      'node_modules/',
      '.next/',
      '.git/',
      'backup_0410/',
      'hydration-reports/'
    ],
    files: {
      total: 0,
      copied: 0,
      skipped: 0
    }
  }
  
  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
  function countFiles(dir, baseDir = '') {
    const items = fs.readdirSync(dir)
    let count = 0
    
    for (const item of items) {
      const fullPath = path.join(dir, item)
      const relativePath = path.join(baseDir, item)
      const stat = fs.statSync(fullPath)
      
      if (stat.isDirectory()) {
        if (['node_modules', '.next', '.git', 'backup_0410', 'hydration-reports'].includes(item)) {
          continue
        }
        count += countFiles(fullPath, relativePath)
      } else {
        count++
      }
    }
    
    return count
  }
  
  report.files.total = countFiles(PROJECT_DIR)
  
  fs.writeFileSync(
    path.join(BACKUP_DIR, 'backup_report.json'), 
    JSON.stringify(report, null, 2)
  )
  
  console.log('üìã –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç –æ –±–µ–∫–∞–ø–µ')
  return report
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    console.log('üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...')
    
    // –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    const dirsToCopy = [
      'src',
      'prisma', 
      'public',
      'scripts',
      'styles'
    ]
    
    for (const dir of dirsToCopy) {
      const srcPath = path.join(PROJECT_DIR, dir)
      const destPath = path.join(BACKUP_DIR, dir)
      
      if (fs.existsSync(srcPath)) {
        console.log(`üìÇ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ ${dir}/...`)
        copyDir(srcPath, destPath)
      }
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    const configFiles = [
      'package.json',
      'package-lock.json',
      'next.config.ts',
      'tailwind.config.mjs',
      'postcss.config.mjs',
      'tsconfig.json',
      'eslint.config.mjs',
      '.env.example',
      'README.md'
    ]
    
    for (const file of configFiles) {
      const srcPath = path.join(PROJECT_DIR, file)
      const destPath = path.join(BACKUP_DIR, file)
      
      if (fs.existsSync(srcPath)) {
        fs.copyFileSync(srcPath, destPath)
        console.log(`üìÑ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω ${file}`)
      }
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const dbPath = path.join(PROJECT_DIR, 'prisma', 'dev.db')
    if (fs.existsSync(dbPath)) {
      fs.copyFileSync(dbPath, path.join(BACKUP_DIR, 'dev.db'))
      console.log('üóÑÔ∏è –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö')
    }
    
    // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    const archivePath = createArchive()
    
    // –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç
    const report = createBackupReport()
    
    // –°–æ–∑–¥–∞–µ–º README –¥–ª—è –±–µ–∫–∞–ø–∞
    const readmeContent = `# –ë–µ–∫–∞–ø —Å–∏—Å—Ç–µ–º—ã Kiddeo

**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** ${new Date().toLocaleString('ru-RU')}
**–í–µ—Ä—Å–∏—è:** ${report.version}

## –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–µ–∫–∞–ø–∞

- **–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥:** src/
- **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:** prisma/dev.db
- **–°—Ö–µ–º–∞ Prisma:** prisma/
- **–ü—É–±–ª–∏—á–Ω—ã–µ —Ñ–∞–π–ª—ã:** public/
- **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** package.json, next.config.ts, –∏ –¥—Ä.
- **–°–∫—Ä–∏–ø—Ç—ã:** scripts/

## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ

1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ —ç—Ç–æ–π –ø–∞–ø–∫–∏ –≤ –Ω–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: \`npm install\`
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: \`npx prisma migrate dev\`
4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: \`npm run dev\`

## –ê—Ä—Ö–∏–≤

–ü–æ–ª–Ω—ã–π –∞—Ä—Ö–∏–≤: \`${archivePath ? path.basename(archivePath) : '–Ω–µ —Å–æ–∑–¥–∞–Ω'}\`

## –ò—Å–∫–ª—é—á–µ–Ω–∏—è

- node_modules/
- .next/
- .git/
- backup_0410/
- hydration-reports/

---
–°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–º create-backup.js
`
    
    fs.writeFileSync(path.join(BACKUP_DIR, 'README.md'), readmeContent)
    
    console.log('\nüéâ –ë–µ–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
    console.log(`üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${BACKUP_DIR}`)
    console.log(`üì¶ –ê—Ä—Ö–∏–≤: ${archivePath || '–Ω–µ —Å–æ–∑–¥–∞–Ω'}`)
    console.log(`üìã –û—Ç—á–µ—Ç: backup_report.json`)
    console.log(`üìñ README: README.md`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–µ–∫–∞–ø–∞:', error.message)
    process.exit(1)
  }
}

main()
