const { PrismaClient } = require('@prisma/client');
const { execSync } = require('child_process');

const prisma = new PrismaClient();

async function quickSeed() {
  try {
    console.log('üöÄ –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
    
    // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–æ—Ä–æ–¥–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    execSync('npx prisma db seed', { stdio: 'inherit' });
    
    // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
    console.log('üé≠ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è...');
    execSync('node scripts/create-test-events.js', { stdio: 'inherit' });
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const cityCount = await prisma.city.count();
    const categoryCount = await prisma.category.count();
    const eventCount = await prisma.afishaEvent.count();
    const venueCount = await prisma.venuePartner.count();
    
    console.log('\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log(`üèôÔ∏è –ì–æ—Ä–æ–¥–æ–≤: ${cityCount}`);
    console.log(`üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${categoryCount}`);
    console.log(`üé≠ –°–æ–±—ã—Ç–∏–π: ${eventCount}`);
    console.log(`üè¢ –ú–µ—Å—Ç: ${venueCount}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

quickSeed();
