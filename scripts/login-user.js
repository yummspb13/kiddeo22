const { PrismaClient } = require('@prisma/client');
const jwt = require('jsonwebtoken');

const prisma = new PrismaClient();

async function loginUser() {
  try {
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 2
    const user = await prisma.user.findUnique({
      where: { id: 2 },
      select: { id: true, name: true, email: true, role: true }
    });

    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID 2 –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', user);

    // –°–æ–∑–¥–∞–µ–º JWT —Ç–æ–∫–µ–Ω
    const token = jwt.sign(
      {
        sub: user.id.toString(),
        email: user.email,
        name: user.name,
        role: user.role,
        type: 'access'
      },
      process.env.JWT_SECRET || 'your-secret-key',
      { expiresIn: '1h' }
    );

    console.log('üîë JWT —Ç–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω:', token);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookie
    const cookieValue = `session=${token}; Path=/; HttpOnly; SameSite=Strict`;
    console.log('üç™ Cookie –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:', cookieValue);
    
    console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:3000');
    console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)');
    console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Application/Storage -> Cookies');
    console.log('4. –î–æ–±–∞–≤—å—Ç–µ cookie —Å –∏–º–µ–Ω–µ–º "session" –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º:', token);
    console.log('5. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

loginUser();
