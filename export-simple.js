#!/usr/bin/env node

/**
 * export-simple.js - –ü—Ä–æ—Å—Ç–æ–π —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */

const { PrismaClient } = require('@prisma/client')
const fs = require('fs')
const path = require('path')

const prisma = new PrismaClient()

async function exportData() {
  console.log('üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
  
  try {
    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    const data = {
      cities: await prisma.city.findMany(),
      users: await prisma.user.findMany(),
      vendors: await prisma.vendor.findMany(),
      venues: await prisma.venue.findMany(),
      categories: await prisma.category.findMany(),
      subcategories: await prisma.subcategory.findMany(),
      tariffPlans: await prisma.vendorTariffPlan.findMany(),
      popularCategories: await prisma.popularCategory.findMany(),
      events: await prisma.event.findMany(),
      venueReviews: await prisma.venueReview.findMany(),
      eventReviews: await prisma.eventReview.findMany(),
      venueClaims: await prisma.venueClaim.findMany(),
      listingClaims: await prisma.listingClaim.findMany(),
      vendorSubscriptions: await prisma.vendorSubscription.findMany(),
      vendorOnboardings: await prisma.vendorOnboarding.findMany(),
      vendorRoles: await prisma.vendorRole.findMany(),
      venuePartners: await prisma.venuePartner.findMany(),
      userSessions: await prisma.userSession.findMany()
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON —Ñ–∞–π–ª
    const exportPath = path.join(__dirname, 'database-export.json')
    fs.writeFileSync(exportPath, JSON.stringify(data, null, 2))
    
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤: ${exportPath}`)
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:')
    Object.entries(data).forEach(([table, records]) => {
      console.log(`   - ${table}: ${records.length} –∑–∞–ø–∏—Å–µ–π`)
    })

    return data

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö:', error)
    throw error
  }
}

async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö...')
  
  try {
    await exportData()
    console.log('\n‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main()
}

module.exports = { exportData }
