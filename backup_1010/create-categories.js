// create-categories.js - –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function createCategories() {
  try {
    console.log('=== –°–û–ó–î–ê–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ô ===')
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–¢–µ–∞—Ç—Ä—ã"
    const theaterCategory = await prisma.category.upsert({
      where: { slug: 'teatry' },
      update: {},
      create: {
        slug: 'teatry',
        name: '–¢–µ–∞—Ç—Ä—ã',
        icon: 'üé≠',
        color: '#8B5CF6',
        isActive: true
      }
    })
    
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "–¢–µ–∞—Ç—Ä—ã":', theaterCategory)
    
    // –°–æ–∑–¥–∞–µ–º –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã
    const categories = [
      { slug: 'muzyka', name: '–ú—É–∑—ã–∫–∞', icon: 'üéµ', color: '#F59E0B' },
      { slug: 'sport', name: '–°–ø–æ—Ä—Ç', icon: '‚öΩ', color: '#10B981' },
      { slug: 'obrazovanie', name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', icon: 'üìö', color: '#3B82F6' },
      { slug: 'razvlecheniya', name: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', icon: 'üé™', color: '#EF4444' },
      { slug: 'vystavki', name: '–í—ã—Å—Ç–∞–≤–∫–∏', icon: 'üñºÔ∏è', color: '#8B5CF6' }
    ]
    
    for (const cat of categories) {
      const category = await prisma.category.upsert({
        where: { slug: cat.slug },
        update: {},
        create: {
          ...cat,
          isActive: true
        }
      })
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è "${cat.name}":`, category.id)
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å –∏—Ö —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    const theaterEvents = await prisma.afishaEvent.findMany({
      where: {
        status: 'active',
        category: '–¢–µ–∞—Ç—Ä—ã'
      }
    })
    
    console.log(`\n=== –û–ë–ù–û–í–õ–ï–ù–ò–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–ô ===`)
    console.log(`–ù–∞–π–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π "–¢–µ–∞—Ç—Ä—ã": ${theaterEvents.length}`)
    
    for (const event of theaterEvents) {
      await prisma.afishaEvent.update({
        where: { id: event.id },
        data: { categoryId: theaterCategory.id }
      })
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: ${event.title}`)
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const allCategories = await prisma.category.findMany({
      where: { isActive: true },
      select: { id: true, name: true, slug: true }
    })
    
    console.log(`\n=== –ò–¢–û–ì–û–í–´–ï –ö–ê–¢–ï–ì–û–†–ò–ò ===`)
    console.log(`–í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${allCategories.length}`)
    allCategories.forEach(cat => {
      console.log(`- ${cat.name} (${cat.slug})`)
    })
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createCategories()
