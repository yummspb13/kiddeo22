import { NextRequest, NextResponse } from 'next/server'
import { prisma } from '@/lib/db'

// POST /api/notifications/vendor-email - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–µ–Ω–¥–æ—Ä—É
export async function POST(request: NextRequest) {
  try {
    const { vendorId, type, data } = await request.json()

    if (!vendorId || !type) {
      return NextResponse.json({ error: 'Missing vendorId or type' }, { status: 400 })
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–Ω–¥–æ—Ä–µ
    const vendor = await prisma.vendor.findUnique({
      where: { id: vendorId },
      include: {
        user: {
          select: {
            id: true,
            name: true,
            email: true
          }
        }
      }
    })

    if (!vendor) {
      return NextResponse.json({ error: 'Vendor not found' }, { status: 404 })
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º email –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    let subject = ''
    let htmlContent = ''

    switch (type) {
      case 'application_approved':
        subject = 'üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!'
        htmlContent = `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #10B981;">üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
            <p>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤–µ–Ω–¥–æ—Ä–∞ <strong>"${vendor.displayName}"</strong> –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞.</p>
            <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:</p>
            <ul>
              <li>–°–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –≤ –∞—Ñ–∏—à–µ</li>
              <li>–î–æ–±–∞–≤–ª—è—Ç—å –º–µ—Å—Ç–∞ –≤ –∫–∞—Ç–∞–ª–æ–≥</li>
              <li>–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏</li>
            </ul>
            <p><a href="${process.env.NEXTAUTH_URL}/vendor/dashboard" style="background: #3B82F6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–Ω–µ–ª—å –≤–µ–Ω–¥–æ—Ä–∞</a></p>
            <p style="color: #6B7280; font-size: 14px; margin-top: 30px;">
              –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
            </p>
          </div>
        `
        break

      case 'application_rejected':
        subject = '‚ùå –ó–∞—è–≤–∫–∞ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏'
        htmlContent = `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #EF4444;">‚ùå –ó–∞—è–≤–∫–∞ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏</h2>
            <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤–µ–Ω–¥–æ—Ä–∞ <strong>"${vendor.displayName}"</strong> –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.</p>
            ${data?.reason ? `<p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${data.reason}</p>` : ''}
            <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è –∏ –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.</p>
            <p><a href="${process.env.NEXTAUTH_URL}/vendor/register" style="background: #3B82F6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ</a></p>
            <p style="color: #6B7280; font-size: 14px; margin-top: 30px;">
              –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
            </p>
          </div>
        `
        break

      case 'application_needs_info':
        subject = '‚ÑπÔ∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
        htmlContent = `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #F59E0B;">‚ÑπÔ∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <p>–î–ª—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤–µ–Ω–¥–æ—Ä–∞ <strong>"${vendor.displayName}"</strong> —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.</p>
            ${data?.reason ? `<p><strong>–ß—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:</strong> ${data.reason}</p>` : ''}
            <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.</p>
            <p><a href="${process.env.NEXTAUTH_URL}/vendor/dashboard" style="background: #3B82F6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–Ω–µ–ª—å –≤–µ–Ω–¥–æ—Ä–∞</a></p>
            <p style="color: #6B7280; font-size: 14px; margin-top: 30px;">
              –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.
            </p>
          </div>
        `
        break

      default:
        return NextResponse.json({ error: 'Invalid notification type' }, { status: 400 })
    }

    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å email —Å–µ—Ä–≤–∏—Å–æ–º (SendGrid, Mailgun, etc.)
    // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    console.log('üìß Email notification:', {
      to: vendor.user.email,
      subject,
      vendorName: vendor.displayName,
      type
    })

    // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º email —Å–µ—Ä–≤–∏—Å–æ–º
    // await sendEmail({
    //   to: vendor.user.email,
    //   subject,
    //   html: htmlContent
    // })

    return NextResponse.json({ 
      success: true, 
      message: 'Email notification queued',
      email: {
        to: vendor.user.email,
        subject,
        type
      }
    })

  } catch (error) {
    console.error('Error sending vendor email notification:', error)
    return NextResponse.json({ 
      error: 'Internal server error',
      details: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 })
  }
}
