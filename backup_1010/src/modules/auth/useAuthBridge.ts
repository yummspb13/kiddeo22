'use client';
import { useQuery } from '@tanstack/react-query';

export interface User {
  id: string;
  email: string;
  name: string;
  role: string;
}

export function useAuthBridge() {
  const { data, isLoading, refetch } = useQuery({
    queryKey: ['auth-session'],
    queryFn: async () => {
      try {
        const response = await fetch('/api/auth/session', {
          credentials: 'include',
          cache: 'no-store',
        });
        
        const data = await response.json();
        
        // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
        if (data.refreshed) {
          console.log('üîÑ Auth token refreshed');
        }
        
        return data;
      } catch (error) {
        console.error('Auth error:', error);
        return { user: null } as { user: User | null };
      }
    },
    initialData: { user: null } as { user: User | null },
    staleTime: 2 * 60 * 1000, // 2 –º–∏–Ω—É—Ç—ã (–º–µ–Ω—å—à–µ –¥–ª—è –±–æ–ª–µ–µ —á–∞—Å—Ç—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫)
    gcTime: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç
    retry: 1, // –†–∞–∑—Ä–µ—à–∞–µ–º –æ–¥–Ω—É –ø–æ–ø—ã—Ç–∫—É –ø–æ–≤—Ç–æ—Ä–∞
    refetchOnWindowFocus: true, // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ –æ–∫–Ω–µ
    refetchOnMount: true, // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    refetchOnReconnect: true, // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    refetchInterval: 5 * 60 * 1000, // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  });

  return { 
    user: data?.user ?? null, 
    loading: isLoading, 
    refetch 
  };
}
