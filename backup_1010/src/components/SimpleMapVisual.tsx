'use client'

import { useEffect, useRef, useState } from 'react'

declare global {
  interface Window {
    ymaps: unknown
  }
}

interface SimpleMapVisualProps {
  events: unknown[]
  cityCenter: { lat: number; lng: number }
  cityName: string
}

export default function SimpleMapVisual({ events, cityCenter, cityName }: SimpleMapVisualProps) {
  const mapRef = useRef<HTMLDivElement>(null)
  const [map, setMap] = useState<any>(null)
  const [isMapLoaded, setIsMapLoaded] = useState(false)
  const [mapError, setMapError] = useState<string | null>(null)
  const [loadingStep, setLoadingStep] = useState('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...')
  const [mapElement, setMapElement] = useState<HTMLDivElement | null>(null)

  // Callback ref –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è DOM —ç–ª–µ–º–µ–Ω—Ç–∞
  const mapRefCallback = (node: HTMLDivElement | null) => {
    console.log('üîó Map ref callback called with:', node)
    if (node) {
      mapRef.current = node
      setMapElement(node)
      console.log('‚úÖ Map element set via callback ref')
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è DOM —ç–ª–µ–º–µ–Ω—Ç–∞
  const forceCreateDOM = () => {
    console.log('üîß Force creating DOM element...')
    const parentContainer = document.querySelector('.w-full.h-\\[600px\\].rounded-lg.overflow-hidden')
    if (parentContainer) {
      parentContainer.innerHTML = ''
      const newElement = document.createElement('div')
      newElement.className = 'w-full h-full'
      newElement.style.minHeight = '600px'
      newElement.id = 'force-map-' + Date.now()
      parentContainer.appendChild(newElement)
      
      mapRef.current = newElement
      setMapElement(newElement)
      
      console.log('‚úÖ Force created DOM element:', newElement)
      setTimeout(() => initMap(), 100)
    } else {
      setMapError('–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')
    }
  }

  // –ü–∞—Ä—Å–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–æ–±—ã—Ç–∏–π
  const eventMarkers = events
    .filter(event => event.coordinates)
    .map(event => {
      try {
        const coords = event.coordinates.split(',').map(Number)
        if (coords.length === 2 && !isNaN(coords[0]) && !isNaN(coords[1])) {
          return {
            id: event.id,
            coordinates: [coords[0], coords[1]] as [number, number],
            event
          }
        }
      } catch (error) {
        console.warn('Invalid coordinates for event:', event.id, event.coordinates)
      }
      return null
    })
    .filter(Boolean)

  const loadYandexMapsScript = (): Promise<void> => {
    return new Promise((resolve, reject) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Å–∫—Ä–∏–ø—Ç
      if (typeof window !== 'undefined' && (window as any).ymaps) {
        console.log('‚úÖ Yandex Maps already loaded')
        resolve()
        return
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ
      const existingScript = document.querySelector('script[src*="api-maps.yandex.ru"]')
      if (existingScript) {
        console.log('‚è≥ Yandex Maps script already loading')
        existingScript.addEventListener('load', () => resolve())
        existingScript.addEventListener('error', () => reject(new Error('Script load error')))
        return
      }

      console.log('üöÄ Loading Yandex Maps script...')
      const script = document.createElement('script')
      script.src = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU&load=package.full'
      script.async = true
      
      script.onload = () => {
        console.log('‚úÖ Yandex Maps script loaded successfully')
        resolve()
      }
      
      script.onerror = () => {
        console.log('‚ùå Yandex Maps script load error')
        reject(new Error('Failed to load Yandex Maps script'))
      }

      document.head.appendChild(script)
    })
  }

  const initMap = async () => {
    try {
      console.log('üîÑ Starting map initialization...')
      setLoadingStep('–ó–∞–≥—Ä—É–∑–∫–∞ API –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç...')
      
      await loadYandexMapsScript()
      
      console.log('‚úÖ Script loaded, initializing map...')
      setLoadingStep('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã...')
      
      // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM —ç–ª–µ–º–µ–Ω—Ç–∞
      if (!mapRef.current) {
        console.log('‚è≥ Map container not ready, waiting...')
        setLoadingStep('–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM...')
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
        let attempts = 0
        const checkDOM = () => {
          attempts++
          console.log(`üîç DOM check attempt ${attempts}`)
          
          if (mapRef.current) {
            console.log('‚úÖ DOM ready, proceeding with map creation')
            createMap()
            return
          }
          
          if (attempts < 10) {
            setTimeout(checkDOM, 200) // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 200–º—Å
          } else {
            console.log('‚ùå DOM not ready after 10 attempts')
            throw new Error('Map container not ready after 10 attempts')
          }
        }
        
        checkDOM()
        return
      }

      createMap()
    } catch (error) {
      console.error('‚ùå Map initialization error:', error)
      setMapError(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã')
      setLoadingStep('')
    }
  }

  const createMap = () => {
    try {
      console.log('üó∫Ô∏è Creating map...')
      setLoadingStep('–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã...')
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!mapRef.current) {
        console.log('‚ö†Ô∏è Map ref still null, creating DOM element manually...')
        const parentContainer = document.querySelector('.w-full.h-\\[600px\\].rounded-lg.overflow-hidden')
        if (parentContainer) {
          // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          parentContainer.innerHTML = ''
          
          // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
          const newMapElement = document.createElement('div')
          newMapElement.className = 'w-full h-full'
          newMapElement.style.minHeight = '600px'
          newMapElement.id = 'map-container-' + Date.now()
          
          parentContainer.appendChild(newMapElement)
          
          // –û–±–Ω–æ–≤–ª—è–µ–º ref
          mapRef.current = newMapElement
          console.log('‚úÖ DOM element created manually:', newMapElement)
        } else {
          throw new Error('Parent container not found for manual DOM creation')
        }
      }
      
      if (typeof window !== 'undefined' && window.ymaps) {
        window.ymaps.ready(() => {
          console.log('‚úÖ Yandex Maps ready, creating map...')
          setLoadingStep('–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã...')
          
          const mapInstance = new window.ymaps.Map(mapRef.current, {
            center: [cityCenter.lat, cityCenter.lng],
            zoom: 12,
            controls: ['zoomControl', 'fullscreenControl', 'typeSelector']
          })

        console.log('‚úÖ Map created successfully')
        setMap(mapInstance)
        setIsMapLoaded(true)
        setMapError(null)
        setLoadingStep('')

        // –ü–æ–¥–≥–æ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã
        try { 
          mapInstance.container.fitToViewport() 
        } catch (e) {
          console.warn('Could not fit to viewport:', e)
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã
        console.log('üìç Adding markers...')
        setLoadingStep('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤...')
        
        eventMarkers.forEach((marker, index) => {
          try {
            const placemark = new window.ymaps.Placemark(
              marker.coordinates,
              {
                balloonContent: `
                  <div style="padding: 10px;">
                    <h3 style="margin: 0 0 5px 0; color: #333;">${marker.event.title}</h3>
                    <p style="margin: 0; color: #666; font-size: 12px;">${marker.event.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                    <p style="margin: 5px 0 0 0; color: #888; font-size: 11px;">${marker.event.startDate || '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
                  </div>
                `,
                iconContent: `${index + 1}`,
                hintContent: marker.event.title
              },
              {
                preset: 'islands#redIcon',
                iconColor: '#ff0000'
              }
            )
            
            mapInstance.geoObjects.add(placemark)
            console.log(`‚úÖ Marker ${index + 1} added:`, marker.event.title)
          } catch (error) {
            console.error(`‚ùå Error adding marker ${index + 1}:`, error)
          }
        })

        console.log(`‚úÖ All ${eventMarkers.length} markers added successfully`)
        setLoadingStep('')
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        const handleResize = () => {
          try { 
            mapInstance.container.fitToViewport() 
          } catch (e) {
            console.warn('Could not fit to viewport on resize:', e)
          }
        }
        window.addEventListener('resize', handleResize)

        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        mapInstance.events.add('destroy', () => {
          window.removeEventListener('resize', handleResize)
        })
        })
      } else {
        throw new Error('Yandex Maps API not available')
      }
    } catch (error) {
      console.error('‚ùå Map creation error:', error)
      setMapError(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã')
      setLoadingStep('')
    }
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üîÑ Component mounted, starting auto-initialization...')
    
    // –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ DOM
    const timer = setTimeout(() => {
      console.log('üîÑ Timer triggered, checking DOM...')
      
      if (mapRef.current || mapElement) {
        console.log('‚úÖ DOM ready, initializing map')
        initMap()
      } else {
        console.log('‚ö†Ô∏è DOM not ready, trying again...')
        // –ï—â–µ –æ–¥–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 500–º—Å
        setTimeout(() => {
          if (mapRef.current || mapElement) {
            console.log('‚úÖ DOM ready on retry, initializing map')
            initMap()
          } else {
            console.log('‚ùå DOM still not ready, showing error')
            setMapError('DOM —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç—ã –Ω–µ –≥–æ—Ç–æ–≤')
          }
        }, 500)
      }
    }, 500) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏

    return () => clearTimeout(timer)
  }, []) // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ mapElement
  useEffect(() => {
    if (mapElement && !isMapLoaded && !mapError) {
      console.log('üéØ Map element ready, initializing map...')
      setTimeout(() => {
        initMap()
      }, 100)
    }
  }, [mapElement, isMapLoaded, mapError])

  // Fallback –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π
  useEffect(() => {
    if (events.length > 0 && !isMapLoaded && !mapError) {
      console.log('üîÑ Events loaded, trying to initialize map...')
      setTimeout(() => {
        if (mapRef.current || mapElement) {
          console.log('‚úÖ DOM ready after events load, initializing map')
          initMap()
        }
      }, 200)
    }
  }, [events.length, isMapLoaded, mapError])

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  useEffect(() => {
    const forceTimer = setTimeout(() => {
      if (!isMapLoaded && !mapError) {
        console.log('üîß Force initialization after 3 seconds...')
        if (mapRef.current || mapElement) {
          console.log('‚úÖ DOM ready for force init, initializing map')
          initMap()
        } else {
          console.log('üîß DOM still not ready, forcing DOM creation...')
          forceCreateDOM()
        }
      }
    }, 3000)

    return () => clearTimeout(forceTimer)
  }, [isMapLoaded, mapError])

  useEffect(() => {
    console.log('üöÄ SimpleMapVisual mounted')
    console.log('üìç City center:', cityCenter)
    console.log('üìä Events count:', events.length)
    console.log('üìç Event markers:', eventMarkers.length)
    
    // –ü—Ä–æ—Å—Ç–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (map && typeof map.destroy === 'function') {
        try { 
          map.destroy() 
        } catch (e) {
          console.warn('Error destroying map:', e)
        }
      }
    }
  }, [cityCenter.lat, cityCenter.lng])

  if (mapError) {
    return (
      <div className="w-full h-[600px] bg-red-50 rounded-lg flex items-center justify-center">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 bg-red-500 rounded-full flex items-center justify-center">
            <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <h3 className="text-xl font-semibold text-gray-700 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã</h3>
          <p className="text-gray-500 mb-4">{mapError}</p>
          <div className="space-y-2">
            <button
              onClick={() => {
                setMapError(null)
                initMap()
              }}
              className="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
            
            <button
              onClick={() => {
                console.log('üîÑ Force initialization button clicked')
                setMapError(null)
                setLoadingStep('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...')
                forceCreateDOM()
              }}
              className="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors block w-full"
            >
              –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            </button>
          </div>
        </div>
      </div>
    )
  }

  if (!isMapLoaded) {
    return (
      <div className="w-full h-[600px] bg-gradient-to-br from-blue-50 to-indigo-100 rounded-lg flex items-center justify-center">
        <div className="text-center max-w-md mx-auto px-6">
          {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –∫–∞—Ä—Ç—ã */}
          <div className="relative mb-6">
            <div className="w-20 h-20 mx-auto bg-blue-600 rounded-full flex items-center justify-center animate-pulse shadow-lg">
              <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m0 0L9 7" />
              </svg>
            </div>
            {/* –í—Ä–∞—â–∞—é—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
            <div className="absolute -top-2 -right-2 w-6 h-6 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin"></div>
          </div>

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <h3 className="text-2xl font-bold text-gray-800 mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã</h3>
          
          {/* –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø */}
          {loadingStep && (
            <div className="mb-4">
              <p className="text-lg text-blue-600 font-medium">{loadingStep}</p>
              <div className="w-full bg-blue-200 rounded-full h-2 mt-2">
                <div className="bg-blue-600 h-2 rounded-full animate-pulse" style={{ width: '70%' }}></div>
              </div>
            </div>
          )}

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π */}
          <div className="bg-white rounded-lg p-4 mb-4 shadow-sm">
            <p className="text-gray-600 mb-2">–ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π</p>
            <p className="text-3xl font-bold text-blue-600">{events.length}</p>
            <p className="text-sm text-gray-500 mt-1">–ú–∞—Ä–∫–µ—Ä–æ–≤: {eventMarkers.length}</p>
          </div>

          {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ—á–∫–∏ */}
          <div className="flex items-center justify-center space-x-2">
            <div className="w-3 h-3 bg-blue-600 rounded-full animate-bounce"></div>
            <div className="w-3 h-3 bg-blue-600 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
            <div className="w-3 h-3 bg-blue-600 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="mt-4 text-sm text-gray-500">
            <p>–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∫–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</p>
            <p className="text-xs mt-2">–¶–µ–Ω—Ç—Ä: {cityCenter.lat.toFixed(4)}, {cityCenter.lng.toFixed(4)}</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="w-full h-[600px] rounded-lg overflow-hidden border-2 border-green-500 shadow-lg relative">
      <div 
        ref={mapRefCallback} 
        className="w-full h-full" 
        style={{ minHeight: '600px' }}
        data-map-container="true"
      />
      
      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <div className="absolute top-4 right-4 bg-green-500 text-white px-3 py-1 rounded-full text-sm font-medium shadow-lg">
        ‚úÖ –ö–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
      </div>
      
      {/* –°—á–µ—Ç—á–∏–∫ –º–∞—Ä–∫–µ—Ä–æ–≤ */}
      <div className="absolute top-4 left-4 bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-medium shadow-lg">
        üìç {eventMarkers.length} –º–∞—Ä–∫–µ—Ä–æ–≤
      </div>
      
      {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="absolute bottom-4 left-4 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-xs">
        DOM: {mapElement ? '‚úÖ' : '‚ùå'} | Ref: {mapRef.current ? '‚úÖ' : '‚ùå'}
      </div>
    </div>
  )
}
