// src/lib/admin-guard.ts
import { notFound } from "next/navigation"
import { cookies } from "next/headers"

type SP = Record<string, string | string[] | undefined> | Promise<Record<string, string | string[] | undefined>>

function getParam(sp: Record<string, string | string[] | undefined>, name: string): string | undefined {
  const v = sp?.[name]
  if (typeof v === "string") return v.trim() || undefined
  if (Array.isArray(v)) return v[0]?.trim() || undefined
  return undefined
}

/** –í–µ—Ä–Ω—ë—Ç "?key=..." –µ—Å–ª–∏ –∫–ª—é—á –µ—Å—Ç—å –≤ query, –∏–Ω–∞—á–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É */
export async function keySuffix(sp: SP): Promise<string> {
  try {
    const resolvedSp = await sp
    const key = getParam(resolvedSp, "key")
    return key ? `?key=${key}` : ""
  } catch (error) {
    console.error("Error in keySuffix:", error)
    return ""
  }
}

/**
 * –ü—É—Å–∫–∞–µ–º –µ—Å–ª–∏:
 *  - –µ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–Ω–∞—è –∫—É–∫–∞ ("ak" –¥–ª—è admin, "vk" –¥–ª—è vendor), –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è middleware, –ò–õ–ò
 *  - –≤ query –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π ?key=...
 *
 * –í dev –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–ª—é—á "kidsreview2025", –≤ prod ‚Äî –±–µ—Ä—ë–º –∏–∑ ENV.
 * –ò–Ω–∞—á–µ ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 404.
 */
export async function requireAdminOrDevKey(sp: SP, scope: "admin" | "vendor" = "admin") {
  try {
    const isDev = process.env.NODE_ENV !== "production"
    console.log("üîç requireAdminOrDevKey: isDev =", isDev, "NODE_ENV =", process.env.NODE_ENV)
    
    // –í dev —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if (isDev) {
      console.log("Dev mode: allowing access to admin panel")
      return {
        success: true,
        user: {
          id: 1,
          name: 'Dev Admin',
          email: 'admin@dev.local'
        }
      }
    }

    const c = await cookies()
    const cookieFlag = scope === "admin" ? c.get("ak")?.value : c.get("vk")?.value
    if (cookieFlag === "1") return {
      success: true,
      user: {
        id: 1,
        name: 'Admin User',
        email: 'admin@system.local'
      }
    }

    const resolvedSp = await sp
    const key = getParam(resolvedSp, "key")

    const expectedKey =
      scope === "admin"
        ? (process.env.ADMIN_KEY || "").trim()
        : (process.env.VENDOR_KEY || "").trim()

    console.log("Debug - Key:", key, "Expected:", expectedKey, "IsDev:", isDev, "ResolvedSp:", resolvedSp)

    if (key && expectedKey && key === expectedKey) return {
      success: true,
      user: {
        id: 1,
        name: 'Key Admin',
        email: 'key@system.local'
      }
    }

    console.log("Access denied. Key:", key, "Expected:", expectedKey, "IsDev:", isDev)
    notFound()
  } catch (error) {
    console.error("Error in requireAdminOrDevKey:", error)
    notFound()
  }
}
