// src/middleware.ts - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ë–ï–ó API –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

// –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º middleware —Ç–æ–ª—å–∫–æ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º–∏ –∑–æ–Ω–∞–º–∏
export const config = {
  matcher: [
    '/admin/:path*',
    '/vendor/:path*',
    '/profile/:path*'
  ]
}

export async function middleware(req: NextRequest) {
  const { pathname, searchParams } = req.nextUrl
  
  console.log(`üîç MIDDLEWARE: ${req.method} ${pathname} - Started at ${new Date().toISOString()}`)
  
  // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ —ç—Ç–æ –∑–∞—â–∏—â–µ–Ω–Ω–∞—è –∑–æ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
  if (pathname.startsWith('/admin') || pathname.startsWith('/vendor') || pathname.startsWith('/profile')) {
    // –î–ª—è –∞–¥–º–∏–Ω–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á –∞–¥–º–∏–Ω–∞
    if (pathname.startsWith('/admin')) {
      const adminKey = searchParams.get('key')
      if (adminKey === 'kidsreview2025') {
        // –ö–ª—é—á –∞–¥–º–∏–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        return NextResponse.next()
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ—Å—Å–∏–∏ –≤ cookies –¥–ª—è –¥—Ä—É–≥–∏—Ö –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –∑–æ–Ω
    const sessionCookie = req.cookies.get('session')
    console.log('üîç MIDDLEWARE: Session cookie check:', { 
      hasCookie: !!sessionCookie, 
      cookieValue: sessionCookie?.value?.substring(0, 20) + '...' 
    })
    
    if (!sessionCookie) {
      console.log('üîç MIDDLEWARE: No session cookie, redirecting to login')
      // –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ—Å—Å–∏–∏, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å –º–æ–¥–∞–ª–∫–æ–π –ª–æ–≥–∏–Ω–∞
      const url = new URL('/', req.url)
      url.searchParams.set('login', 'true')
      return NextResponse.redirect(url)
    }
    
    console.log('üîç MIDDLEWARE: Session cookie found, allowing access')
  }

  return NextResponse.next()
}