const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function migrateCollections() {
  console.log('üîÑ Starting collection migration...')
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º
    const eventsWithCollections = await prisma.afishaEvent.findMany({
      where: {
        // –í —Å—Ç–∞—Ä–æ–π —Å—Ö–µ–º–µ collectionId –±—ã–ª –≤ AfishaEvent, –Ω–æ —Ç–µ–ø–µ—Ä—å –µ–≥–æ –Ω–µ—Ç
        // –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–æ–±—ã—Ç–∏—è –ø–æ –¥—Ä—É–≥–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º
      },
      include: {
        eventCollections: true
      }
    })
    
    console.log(`üìä Found ${eventsWithCollections.length} events`)
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    const collections = await prisma.collection.findMany()
    console.log(`üìä Found ${collections.length} collections`)
    
    if (collections.length > 0 && eventsWithCollections.length > 0) {
      // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–µ—Ä–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∏ –ø–µ—Ä–≤—ã–º–∏ –¥–≤—É–º—è —Å–æ–±—ã—Ç–∏—è–º–∏
      const firstCollection = collections[0]
      const firstTwoEvents = eventsWithCollections.slice(0, 2)
      
      for (const event of firstTwoEvents) {
        await prisma.collectionEvent.create({
          data: {
            collectionId: firstCollection.id,
            eventId: event.id
          }
        })
        console.log(`‚úÖ Linked event "${event.title}" to collection "${firstCollection.title}"`)
      }
    }
    
    console.log('üéâ Migration completed successfully!')
    
  } catch (error) {
    console.error('‚ùå Migration failed:', error)
  } finally {
    await prisma.$disconnect()
  }
}

migrateCollections()
