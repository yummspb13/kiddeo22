#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const components = [
  'src/components/AuthButton.tsx',
  'src/components/PointsWidget.tsx',
  'src/modules/auth/useAuthBridge.ts',
  'src/hooks/useUser.ts',
  'src/hooks/useNotifications.ts',
  'src/components/ClaimButton.tsx',
  'src/components/TicketCalculator.tsx',
  'src/app/profile/ProfileLayoutClient.tsx',
  'src/app/profile/ProfileClient.tsx',
  'src/app/profile/settings/SettingsClient.tsx',
  'src/app/profile/points/PointsClient.tsx',
  'src/app/cart/page.tsx'
];

// –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π
const hydrationPatterns = [
  // –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  {
    pattern: /if\s*\(\s*typeof\s+window\s*!==\s*['"]undefined['"]\s*\)/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ typeof window !== "undefined" –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'warning'
  },
  {
    pattern: /if\s*\(\s*typeof\s+window\s*===\s*['"]undefined['"]\s*\)/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ typeof window === "undefined" –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'warning'
  },
  {
    pattern: /Date\.now\(\)/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Date.now() –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'error'
  },
  {
    pattern: /Math\.random\(\)/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Math.random() –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'error'
  },
  {
    pattern: /new\s+Date\(\)/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ new Date() –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'warning'
  },
  {
    pattern: /window\.location/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ window.location –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'warning'
  },
  {
    pattern: /document\./g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ document –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'warning'
  },
  {
    pattern: /localStorage/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ localStorage –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'warning'
  },
  {
    pattern: /sessionStorage/g,
    message: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ sessionStorage –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'warning'
  }
];

// –•–æ—Ä–æ—à–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏
const goodPatterns = [
  {
    pattern: /useState\(false\)/g,
    message: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ useState –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π',
    severity: 'good'
  },
  {
    pattern: /useEffect\(\(\)\s*=>\s*\{\s*setIsHydrated\(true\)/g,
    message: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ useEffect –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ isHydrated',
    severity: 'good'
  },
  {
    pattern: /if\s*\(\s*!isHydrated\s*\)/g,
    message: '–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ isHydrated',
    severity: 'good'
  }
];

function checkFile(filePath) {
  if (!fs.existsSync(filePath)) {
    return {
      file: filePath,
      exists: false,
      issues: []
    };
  }

  const content = fs.readFileSync(filePath, 'utf8');
  const issues = [];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  hydrationPatterns.forEach(({ pattern, message, severity }) => {
    const matches = content.match(pattern);
    if (matches) {
      matches.forEach((match, index) => {
        const lineNumber = content.substring(0, content.indexOf(match)).split('\n').length;
        issues.push({
          type: 'problem',
          severity,
          message,
          match,
          line: lineNumber,
          pattern: pattern.toString()
        });
      });
    }
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–æ—Ä–æ—à–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  goodPatterns.forEach(({ pattern, message, severity }) => {
    const matches = content.match(pattern);
    if (matches) {
      matches.forEach((match, index) => {
        const lineNumber = content.substring(0, content.indexOf(match)).split('\n').length;
        issues.push({
          type: 'good',
          severity,
          message,
          match,
          line: lineNumber,
          pattern: pattern.toString()
        });
      });
    }
  });

  return {
    file: filePath,
    exists: true,
    issues
  };
}

function main() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π...\n');

  const results = components.map(checkFile);
  const allIssues = [];
  let totalProblems = 0;
  let totalGood = 0;

  results.forEach(result => {
    if (!result.exists) {
      console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${result.file}`);
      return;
    }

    const problems = result.issues.filter(issue => issue.type === 'problem');
    const good = result.issues.filter(issue => issue.type === 'good');

    totalProblems += problems.length;
    totalGood += good.length;

    if (problems.length > 0 || good.length > 0) {
      console.log(`\nüìÑ ${result.file}:`);
      
      if (problems.length > 0) {
        console.log('  ‚ùå –ü—Ä–æ–±–ª–µ–º—ã:');
        problems.forEach(issue => {
          console.log(`    - ${issue.severity.toUpperCase()}: ${issue.message} (—Å—Ç—Ä–æ–∫–∞ ${issue.line})`);
          allIssues.push({
            file: result.file,
            ...issue
          });
        });
      }

      if (good.length > 0) {
        console.log('  ‚úÖ –•–æ—Ä–æ—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏:');
        good.forEach(issue => {
          console.log(`    - ${issue.message} (—Å—Ç—Ä–æ–∫–∞ ${issue.line})`);
        });
      }
    } else {
      console.log(`‚úÖ ${result.file} - OK`);
    }
  });

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
  const report = {
    timestamp: new Date().toISOString(),
    totalFiles: results.filter(r => r.exists).length,
    totalProblems,
    totalGood,
    issues: allIssues
  };

  const reportPath = path.join(__dirname, '..', 'hydration-check-report.json');
  fs.writeFileSync(reportPath, JSON.stringify(report, null, 2));

  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
  console.log(`  –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${results.filter(r => r.exists).length}`);
  console.log(`  –ü—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ: ${totalProblems}`);
  console.log(`  –•–æ—Ä–æ—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫: ${totalGood}`);
  console.log(`  –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);

  if (totalProblems > 0) {
    console.log('\n‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–µ–π!');
    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
    console.log('  1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ useState –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏');
    console.log('  2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ useEffect –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ isHydrated');
    console.log('  3. –ò–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ window, document, localStorage');
    console.log('  4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π isHydrated');
    process.exit(1);
  } else {
    console.log('\n‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    process.exit(0);
  }
}

main();
